---
import { Icon } from "astro-icon/components";
import Link from "./Link.astro";

interface Props {
  observerid: string;
  threshold?: number;
}

const { observerid, threshold = 0.2 } = Astro.props;
---

<Link
  href="#top"
  class="fixed -bottom-20 right-1/2 translate-x-1/2 transition-all"
  id="to-top"
  variant="rounded"
>
  <Icon name="tabler:arrow-up" class="w-8 h-8 dark:text-white" />
</Link>

<!-- <script>
  import { $ } from "@lib/utils/dom-selectors";

  const btnTop = $("#to-top");

  const options: IntersectionObserverInit = {
    threshold: 0.2,
  };

  const observer = new IntersectionObserver((e) => {
    e.forEach((element) => {
      if (element.isIntersecting) {
        btnTop.classList.remove("bottom-5");
        btnTop.classList.add("-bottom-20");
      } else {
        btnTop.classList.add("bottom-5");
        btnTop.classList.remove("-bottom-20");
      }
    });
  }, options);

  observer.observe($("#hero"));
</script> -->

<script is:inline define:vars={{ observerid, threshold }}>
  const btnTop = document.querySelector("#to-top");
  const observerElement = document.querySelector(`#${observerid}`);

  if (!btnTop || !observerElement) return;

  const options = {
    threshold,
  };

  const observer = new IntersectionObserver((e) => {
    e.forEach((element) => {
      if (element.isIntersecting) {
        btnTop.classList.remove("bottom-5");
        btnTop.classList.add("-bottom-20");
      } else {
        btnTop.classList.add("bottom-5");
        btnTop.classList.remove("-bottom-20");
      }
    });
  }, options);

  observer.observe(observerElement);
</script>
